// This installs dependencyUpdates plugin
// Run gradle dependencyUpdates to get the report
plugins {
    id 'com.github.ben-manes.versions' version '0.13.0'
    id "com.jfrog.bintray" version "1.7"
}

apply plugin: 'java'
apply plugin: 'idea'


// Directories where we build the distro
ext.distBinDir = file('dist-bin')
ext.pluginsDir = file('dist-bin/plugins')

archivesBaseName = 'ganttproject'
version = '2.8.2-r' + getBuildNum()

// What is counted as java project for the purposes of this build
def javaProjects() {
    subprojects.findAll { project ->
        project.name != rootProject.name && project.path != ':..'
    }
}

// Config for all projects: deps come from Maven repository,
// compile using Java 8, libs normally sit in lib
allprojects {
  configurations {
    mavenDeps
  }
  repositories {
    mavenCentral()
    jcenter()
  }
  apply plugin: 'java'
  ext {
    libDir = 'lib'
  }
  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  task updateMavenDeps(type: Copy) {
    from configurations.mavenDeps
    into project.ext.libDir
  }
}

clean {
  delete += "dist-bin"
}

task copyPlugin(type: Copy) {
  into(rootProject.distBinDir)
  from(fileTree(".")) {
    include "lib/javagalician.jar"
    include "ganttproject"
    include "ganttproject.bat"
    include "ganttproject-eclipsito-config.xml"
    include "logging.properties"
  }
}

task distBin(dependsOn: getTasksByName('assemble', true) + getTasksByName('copyPlugin', true)) {
  doLast {
    println "== Finished building binary distro =="
  }
}

def getBuildNum() {
  return "./hg-tip-rev.sh".execute().text.trim()
}

task distZip(type: Zip, dependsOn: distBin) {
  from 'dist-bin'
  into archivesBaseName + '-' + version
}

task updateLibs(dependsOn: getTasksByName('updateMavenDeps', true)) {
  doLast {
    println "== Finished updating libs =="
  }
}

task runApp(type: JavaExec, dependsOn: distBin) {
  workingDir = 'dist-bin'
  classpath = fileTree(dir: 'dist-bin', includes:['eclipsito.jar'])
  main = 'org.bardsoftware.eclipsito.Boot'
  args '-app','net.sourceforge.ganttproject.GanttProject','-plugins-dir','plugins'
}
idea {
  project {
    vcs = 'Git'
    outputFile = new File(outputFile.parentFile, 'ganttproject.ipr')
  }
}
